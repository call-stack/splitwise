version: '3'

services:
  postgres:
    image: postgres:13.1
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - fullstack
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=splitwise
    volumes:
      - ./internal/db/migration:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    links:
      - dblink


  server:
      build:
        context: .
        dockerfile: Dockerfile
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=password
        - POSTGRES_DB=splitwise
        - DATABASE_HOST=postgres
      depends_on:
        - postgres
      networks:
        - fullstack
      ports:
        - "8080:8080"
      links:
        - dblink



#version: "3.7"
#services:
#  postgres12:
#    image: postgres:12
#    container_name: postgres12
#    restart: always
#
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=splitwise
#    ports:
#      - '5432:5432'
#    volumes:
#      - ./data:/var/lib/postgresql/data
#    networks:
#      - fullstack
#      - migrateN
#
#  server:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      - POSTGRES_USER:postgres
#      - POSTGRES_PASSWORD:postgres
#      - POSTGRES_DB:splitwise
#      - DATABASE_HOST:postgresdb
#    depends_on:
#      - migrate
#      - postgresdb
#    networks:
#      - fullstack
#
#    ports:
##      - "8080:8080"
#  migrate:
#    image: migrate/migrate
#    networks:
#      - migrateN
#    volumes:
#      - ./internal/db/migration:/database
#    depends_on:
#     - postgresdb
#    links:
#      - postgresdb
#    command: [ "-path", "/database", "-database",  "postgres://postgres:postgres@postgres12:5432/splitwise?sslmode=disable", "up", "3" ]
#
networks:
  fullstack:
    driver: bridge
#  migrateN:
#    driver: bridge